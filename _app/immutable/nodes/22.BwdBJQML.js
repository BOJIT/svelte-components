import{c as y,l as w}from"../chunks/BvQ-jD0X.js";import"../chunks/BpBpVZaC.js";import{p as _,h as j,s,f as x,a as I,b as A,$,F as u,c as E,d as a,r as n,k as M}from"../chunks/DGXZ7-fm.js";import{a as S}from"../chunks/DmM4ED4t.js";import{h as t}from"../chunks/BCQ-OJUB.js";l[u]="src/routes/guide/+page.svx";var q=S(E('<h1>Getting Started</h1> <hr/> <blockquote><p>Note: This framework is not stable! It’s largely intended for use in BOJIT sites. Interfaces may not follow strict SemVer.</p></blockquote> <br/> <ol><li><p>Create a new SvelteKit app using the SvelteKit CLI:</p> <p>In the selection dialogues, you should set up with <code>typescript</code> and <code>tailwindcss</code> support.</p></li></ol> <pre class="language-bash"><!></pre> <hr/> <ol start="2"><li>Install the components library</li></ol> <pre class="language-bash"><!></pre> <hr/> <ol start="3"><li>Modify the following files</li></ol> <pre class="language-js"><!></pre> <pre class="language-css"><!></pre> <hr/> <ol start="4"><li>Instantiate the library in the top-level <code>+layout.svelte</code> file</li></ol> <pre class="language-svelte"><!></pre> <p>That’s it! Check the reference pages to see how each component is used!</p> <blockquote><p>Note: if using <code>adapter static</code>, don’t forget to add <code>export const prerender = true;</code> to the root <code>+layout.ts</code>!</p></blockquote>',1),l[u],[[7,0],[8,0],[9,0,[[10,0]]],[12,0],[13,0,[[14,0,[[15,0],[16,0,[[16,54],[16,82]]]]]]],[19,0],[20,0],[21,0,[[22,0]]],[24,0],[25,0],[26,0,[[27,0]]],[29,0],[35,0],[39,0],[40,0,[[41,0,[[41,45]]]]],[43,0],[54,0],[55,0,[[56,0,[[56,18],[56,67],[56,123]]]]]]);function l(k,d){y(new.target),_(d,!1,l);var g={...w()},r=q();j(C=>{$.title="Getting Started"});var e=s(x(r),10),m=a(e);t(m,()=>'<code class="language-bash">npx sv create <span class="token operator">&lt;</span>MY_APP<span class="token operator">></span></code>'),n(e);var p=s(e,6),h=a(p);t(h,()=>'<code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> @bojit/svelte-components</code>'),n(p);var o=s(p,6),f=a(o);t(f,()=>`<code class="language-js"><span class="token comment">/* tailwind.config.ts */</span>
<span class="token keyword">import</span> config <span class="token keyword">from</span> <span class="token string">'@bojit/svelte-components/tailwind'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token comment">// Additional Props go Here</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`),n(o);var c=s(o,2),v=a(c);t(v,()=>`<code class="language-css"><span class="token comment">/* src/app.css */</span>
<span class="token atrule"><span class="token rule">@import</span> <span class="token string">'@bojit/svelte-components/themes/&lt;EXAMPLE_THEME>.css'</span><span class="token punctuation">;</span></span>

<span class="token comment">/* Custom types and fonts can also be imported here */</span></code>`),n(c);var i=s(c,6),b=a(i);return t(b,()=>`<code class="language-svelte"><span class="token comment">&lt;!-- Bare-bones +layout.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> App <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@bojit/svelte-components'</span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token string">'../app.css'</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> children <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">$props</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span><span class="token punctuation">></span></span>
    <span class="token language-javascript"><span class="token punctuation">&#123;</span>@render <span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>App</span><span class="token punctuation">></span></span></code>`),n(i),M(4),I(k,r),A(g)}export{l as component};

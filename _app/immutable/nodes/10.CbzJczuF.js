import{c as x,l as E}from"../chunks/DFlwrw4f.js";import"../chunks/DTnbcjZT.js";import{p as j,b as A,m as D,F as v,k as d,i as U,g as l,a as W,G as y,f as B,s as P,c as F,r as R,t as G,ak as z,al as I,$ as H}from"../chunks/CSs5j321.js";import{b as T,t as q,a as L,h as J}from"../chunks/B_ALQZRw.js";import{h as K}from"../chunks/CSlf_XMF.js";import{s as Q}from"../chunks/CWc45YTg.js";import{w as X}from"../chunks/CT1BjXXT.js";import{v as Y,p as S}from"../chunks/CLHzkbyc.js";import{o as Z}from"../chunks/i_6tuh6C.js";import{P as $}from"../chunks/C-jH-jhj.js";import{c as nn}from"../chunks/D_AFOtY5.js";import{B as an}from"../chunks/BXt7g-27.js";import{n as b}from"../chunks/CS0D03Ih.js";D();r[v]="src/lib/components/widgets/SerialPort/SerialPort.svelte";var sn=T(q('<!> <p class="!m-0"> </p>',1),r[v],[[172,4]]);function r(w,n){x(new.target),j(n,!0,r),Y(n,["connected"],["send"],r);let f=S(n,"baud",3,115200),c=S(n,"connected",15,!1),i=z(!1),a=null,s,p;async function M(){var k,g,m;if(!l(i))return;I(a,null,!1)&&u();const e=n.vid&&n.pid?[{usbVendorId:n.vid,usbProductId:n.pid}]:[];let o=await navigator.serial.getPorts();if(o.forEach(t=>{d(t.getInfo().usbProductId,n.pid)}),n.vid&&n.pid&&(o=o.filter(t=>d(t.getInfo().usbVendorId,n.vid)&&d(t.getInfo().usbProductId,n.pid))),d(o.length,1))a=o[0];else try{a=await navigator.serial.requestPort({filters:e})}catch{b({title:"Port Not Selected!",type:"warning",description:"Port not selected in dialogue: resetting to disconnected",timeout:5e3});return}try{await a.open({baudRate:f()}),a.addEventListener("disconnect",u),s=(k=a.readable)==null?void 0:k.getReader(),p=(g=a.writable)==null?void 0:g.getWriter(),c(!0),setTimeout(async()=>{try{const t=await(s==null?void 0:s.read());t&&_(t)}catch{await u(),b({type:"warning",title:"Buffer Overrun",description:"Try Opening the Serial Port Again",timeout:5})}},0),(m=n.onConnect)==null||m.call(n)}catch{await a.forget(),u(),b({type:"error",title:"Port Open Failed!",description:"Failed to open Serial Port!",timeout:5e3})}}async function u(){var e;if(!I(a,null)){try{await(s==null?void 0:s.cancel()),await(p==null?void 0:p.close()),await a.close(),a.removeEventListener("disconnect",u)}catch{}s=void 0,p=void 0,c(!1),a=null,(e=n.onDisconnect)==null||e.call(n)}}function _(e){var o;d(e.value,void 0)||((o=n.onRecv)==null||o.call(n,e.value),s==null||s.read().then(_))}async function O(e){d(a,null)||await(p==null?void 0:p.write(e))}Z(()=>{U(i,"serial"in navigator)});var V=y(()=>!l(i)),C=y(()=>nn(`dark border transition-colors ${l(i)?c()?"border-red-500":"border-green-400":"border-gray-600"}`,n.class)),N=y(()=>c()?u:M);return an(w,{get disabled(){return l(V)},variant:"ghost",get class(){return l(C)},get onclick(){return l(N)},children:X(r,(e,o)=>{var k=sn(),g=B(k);$(g,{});var m=P(g,2),t=F(m,!0);R(m),G(()=>Q(t,l(i)?c()?"Disconnect":"Connect":"Unsupported")),L(e,k)}),$$slots:{default:!0}}),A({get send(){return O},...E()})}W(r);D();h[v]="src/routes/demo/serial-port/+page.svx";var tn=T(q(`<h1>Serial Port</h1> <p>This component is an opinionated helper button that is used to connect to a serial device.
It handles the following:</p> <ul><li>Tracking connection/disconnection state</li> <li>Browser incompatibility warning</li> <li>VID/PID filtering</li> <li>Automatic reconnection if access has already been granted to a device</li></ul> <pre class="language-svelte"><!></pre> <hr> <!>`,1),h[v],[[10,0],[11,0],[13,0,[[14,0],[15,0],[16,0],[17,0]]],[19,0],[40,0]]);function h(w,n){x(new.target),j(n,!1,h);var f=tn();J(s=>{H.title="Demo - Serial Port"});var c=P(B(f),6),i=F(c);K(i,()=>`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Widgets <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@bojit/svelte-components'</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> <span class="token literal-property property">sp</span><span class="token operator">:</span> Widgets<span class="token punctuation">.</span>SerialPort<span class="token punctuation">;</span>

    <span class="token function">onMount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sp<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Widgets.SerialPort</span>
    <span class="token attr-name">baud=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token number">115200</span><span class="token punctuation">&#125;</span></span>
    <span class="token attr-name"><span class="token namespace">bind:</span>this=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>sp<span class="token punctuation">&#125;</span></span>
    <span class="token attr-name">onRecv=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span>
<span class="token punctuation">/></span></span>

<span class="token comment">&lt;!-- Alternate Styling Example --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Widgets.SerialPort</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bg-black text-white<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`),R(c);var a=P(c,4);return r(a,{}),L(w,f),A({...E()})}W(h);export{h as component};

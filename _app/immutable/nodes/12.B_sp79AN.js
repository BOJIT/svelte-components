import{c as E,l as W}from"../chunks/BvQ-jD0X.js";import"../chunks/BpBpVZaC.js";import{p as j,aG as U,aH as z,aI as G,g as w,w as H,i as r,b as A,f as B,s as y,d as D,r as F,t as J,e as K,a as R,u as b,z as d,aJ as t,F as m,c as q,aK as x,y as Q,h as X,$ as Y}from"../chunks/DGXZ7-fm.js";import{a as L}from"../chunks/DmM4ED4t.js";import{h as Z}from"../chunks/BCQ-OJUB.js";import{p as T}from"../chunks/ChhyvjLa.js";import{P as $}from"../chunks/Bcq5yJn1.js";import{c as nn}from"../chunks/DKrhil49.js";import{B as an}from"../chunks/BhqE3Q_q.js";import{n as h}from"../chunks/0pr86TV6.js";l[m]="src/lib/components/widgets/SerialPort/SerialPort.svelte";var sn=L(q('<!> <p class="!m-0"> </p>',1),l[m],[[172,4]]);function l(f,n){E(new.target),j(n,!0,l);let v=T(n,"baud",3,115200),p=T(n,"connected",15,!1),e=U(z(!1),"supported"),a=null,c,k;async function M(){if(!r(e))return;x(a,null,!1)&&u();const o=n.vid&&n.pid?[{usbVendorId:n.vid,usbProductId:n.pid}]:[];let i=(await t(navigator.serial.getPorts()))();if(i.forEach(s=>{d(s.getInfo().usbProductId,n.pid)}),n.vid&&n.pid&&(i=i.filter(s=>d(s.getInfo().usbVendorId,n.vid)&&d(s.getInfo().usbProductId,n.pid))),d(i.length,1))a=i[0];else try{a=(await t(navigator.serial.requestPort({filters:o})))()}catch{h({title:"Port Not Selected!",type:"warning",description:"Port not selected in dialogue: resetting to disconnected",timeout:5e3});return}try{(await t(a.open({baudRate:v()})))(),a.addEventListener("disconnect",u),c=a.readable?.getReader(),k=a.writable?.getWriter(),p(!0),setTimeout(async()=>{try{const s=(await t(c?.read()))();s&&P(s)}catch{(await t(u()))(),h({type:"warning",title:"Buffer Overrun",description:"Try Opening the Serial Port Again",timeout:5})}},0),n.onConnect?.()}catch{(await t(a.forget()))(),u(),h({type:"error",title:"Port Open Failed!",description:"Failed to open Serial Port!",timeout:5e3})}}async function u(){if(!x(a,null)){try{(await t(c?.cancel()))(),(await t(k?.close()))(),(await t(a.close()))(),a.removeEventListener("disconnect",u)}catch{}c=void 0,k=void 0,p(!1),a=null,n.onDisconnect?.()}}function P(o){d(o.value,void 0)||(n.onRecv?.(o.value),c?.read().then(P))}async function O(o){d(a,null)||(await t(k?.write(o)))()}G(()=>{Q(e,"serial"in navigator)});var V={get send(){return O},...W()};{let o=b(()=>!r(e)),i=b(()=>nn(`dark border transition-colors ${r(e)?p()?"border-red-500":"border-green-400":"border-gray-600"}`,n.class)),s=b(()=>p()?u:M);w(()=>an(f,{get disabled(){return r(o)},variant:"ghost",get class(){return r(i)},get onclick(){return r(s)},children:H(l,(C,en)=>{var _=sn(),I=B(_);w(()=>$(I,{}),"component",l,171,4,{componentTag:"Plug"});var S=y(I,2),N=D(S,!0);F(S),J(()=>K(N,r(e)?p()?"Disconnect":"Connect":"Unsupported")),R(C,_)}),$$slots:{default:!0}}),"component",l,162,0,{componentTag:"Button"})}return A(V)}g[m]="src/routes/demo/serial-port/+page.svx";var tn=L(q(`<h1>Serial Port</h1> <p>This component is an opinionated helper button that is used to connect to a serial device.
It handles the following:</p> <ul><li>Tracking connection/disconnection state</li> <li>Browser incompatibility warning</li> <li>VID/PID filtering</li> <li>Automatic reconnection if access has already been granted to a device</li></ul> <pre class="language-svelte"><!></pre> <hr/> <!>`,1),g[m],[[10,0],[11,0],[13,0,[[14,0],[15,0],[16,0],[17,0]]],[19,0],[40,0]]);function g(f,n){E(new.target),j(n,!1,g);var v={...W()},p=tn();X(k=>{Y.title="Demo - Serial Port"});var e=y(B(p),6),a=D(e);Z(a,()=>`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Widgets <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@bojit/svelte-components'</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> <span class="token literal-property property">sp</span><span class="token operator">:</span> Widgets<span class="token punctuation">.</span>SerialPort<span class="token punctuation">;</span>

    <span class="token function">onMount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sp<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Widgets.SerialPort</span>
    <span class="token attr-name">baud=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token number">115200</span><span class="token punctuation">&#125;</span></span>
    <span class="token attr-name"><span class="token namespace">bind:</span>this=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>sp<span class="token punctuation">&#125;</span></span>
    <span class="token attr-name">onRecv=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span>
<span class="token punctuation">/></span></span>

<span class="token comment">&lt;!-- Alternate Styling Example --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Widgets.SerialPort</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bg-black text-white<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`),F(e);var c=y(e,4);return w(()=>l(c,{}),"component",g,41,0,{componentTag:"Widgets.SerialPort"}),R(f,p),A(v)}export{g as component};
